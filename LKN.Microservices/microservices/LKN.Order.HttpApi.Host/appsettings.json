{
  "App": {
    "CorsOrigins": "https://*.Order.com,http://localhost:4200,http://localhost:44307,https://localhost:44307"
  },
  "ConnectionStrings": {
    "Default": "Server=localhost;Port=3306;Database=Order;Uid=root;Pwd=myPassword;",
    // "Order": "Server=(LocalDb)\\MSSQLLocalDB;Database=Order_Module;Trusted_Connection=True;TrustServerCertificate=True"
    "Order": "Server=114.132.198.248;Port=3306;Database=LKN.OrderService;Uid=root;Pwd=skceDB010993.;"
  },
  /*"Redis": {
    "Configuration": "127.0.0.1"
  },*/

  "AuthServer": {
    "Authority": "https://localhost:44334/",
    "RequireHttpsMetadata": "false",
    "SwaggerClientId": "Order_Swagger",
    "SwaggerClientSecret": "1q2w3e*"
  },

  "ConsulRegistry": {
    "ServiceName": "OrderServices",
    "RegistryAddress": "http://localhost:8500",
    "HealthCheckAddress": "/HealthCheck"
  },

  "Nacos": {
    "Namespace": "", // Please set the value of Namespace ID !!!!!!!!
    "ServerAddresses": [ "http://192.168.3.2:8848" ],
    "UserName": "nacos",
    "Password": "nacos",
    "AccessKey": "",
    "SecretKey": "",
    "ConfigUseRpc": false,
    "NamingUseRpc": false,
    "Listeners": [
      {
        "Optional": false,
        "DataId": "appsettings.json",
        "Group": "OrderService"
      }
    ]
  },

  "Cap": {
    "HostName": "localhost",
    "UserName": "guest",
    "Password": "guest",
    "Port": 5672,
    "VirtualHost": "/",
    "FailedRetryInterval": 3,
    "FailedRetryCount": 10
  },

  "ElkRabbitMq": {
    "RABBITMQ_HOST": "/",
    "RABBITMQ_USER": "guest",
    "RABBITMQ_PASSWORD": "guest",
    "RABBITMQ_EXCHANGE": "orderlogsservice",
    "RABBITMQ_EXCHANGE_TYPE": "topic",
    "Port": 5672,
    "RouteKey": "orderlogsservicekey",
    "RABBITMQ_HOSTNAMES": "localhost"
  },

  "Serilog": {
    "MinimumLevel": {
      "Default": "Debug", //最小日志记录级别
      "Override": { //系统日志最小记录级别
        "Default": "Warning",
        "System": "Warning",
        "Microsoft": "Warning"
      }
    },
    "WriteTo": [
      { "Name": "Console" }, //输出到控制台
      {
        "Name": "Async", //Serilog.Sinks.Async
        "Args": {
          "configure": [
            {
              "Name": "File", //输出文件
              "Args": {
                "path": "log/log.txt",
                "outputTemplate": "{NewLine}Date:{Timestamp:yyyy-MM-dd HH:mm:ss.fff}{NewLine}LogLevel:{Level}{NewLine}Message:{Message}{NewLine}Exception:{Exception}{NewLine}---------------------------------------------------------------------------------------------------------",
                "rollingInterval": "3" //按天记录
              }
            }
          ]
        }
      }
    ]
    //serilog  end
  }

}
